---
version: '3'
services:
  kibana:
    image: opendatastack/kibana-{{ image_flavor }}:{{ version_tag }}
    environment:
      ELASTICSEARCH_URL: 'http://localhost:19200'
      ELASTICSEARCH_REQUESTHEADERSWHITELIST: '["x-proxy-user","cookie"]'
      OWN_HOME_ELASTICSEARCH_URL: 'http://elasticsearch:9200'
      OWN_HOME_SESSION_SECRETKEY: 'the-password-must-be-at-least-32-characters-long'
      OWN_HOME_SESSION_ISSECURE: 'false'
      OWN_HOME_LOCAL_ENABLED: 'true'
      OWN_HOME_LOCAL_GROUPS: '["public"]'
    ports:
      - 5601:5601
    networks: [elastic]

    # Configure certificate and key files to enable SSL. The certificate
    # provided in the example is self-signed, and thus insecure. It should
    # only be used for experimentation, never in production.
    #
    # environment:
    #   - SERVER_SSL_CERT=/usr/share/kibana/config/kibana.example.org.crt
    #   - SERVER_SSL_KEY=/usr/share/kibana/config/kibana.example.org.key

  elasticsearch:
    {% if image_flavor == 'x-pack' -%}
    image: docker.elastic.co/elasticsearch/elasticsearch-platinum:{{ version_tag }}
    {% else -%}
    image: docker.elastic.co/elasticsearch/elasticsearch-basic:{{ version_tag }}
    {% endif-%}
    networks: [elastic]
    environment:
      - discovery.type=single-node
      {% if image_flavor == 'x-pack' -%}
      - ELASTIC_PASSWORD=changeme
      {% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:9200 || exit 1"]
      interval: 5s
      retries: 10

  demo:
    image: opendatastack/elasticsearch-demo:{{ version_tag }}
    entrypoint: sh -c "sleep 20s && /load.sh"
    container_name: demo
    networks: [elastic]
    depends_on:
      - elasticsearch

networks:
  elastic:
